name: Confluence to Open-WebUI Export

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      space_key:
        description: 'Confluence space key to export'
        required: true
        default: 'DOCS'
      force_full_export:
        description: 'Force full export (ignore incremental)'
        required: false
        default: 'false'
        type: boolean

jobs:
  export:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install confluence-markdown-exporter

      - name: Setup configuration
        run: |
          mkdir -p ~/.config/confluence-markdown-exporter
          cat > ~/.config/confluence-markdown-exporter/app_data.json << 'EOF'
          {
            "auth": {
              "confluence": {
                "url": "${{ secrets.CONFLUENCE_URL }}",
                "username": "${{ secrets.CONFLUENCE_USERNAME }}",
                "api_token": "${{ secrets.CONFLUENCE_API_TOKEN }}"
              },
              "open_webui": {
                "url": "${{ secrets.OPENWEBUI_URL }}",
                "api_key": "${{ secrets.OPENWEBUI_API_KEY }}"
              }
            },
            "export": {
              "export_to_open_webui": true,
              "open_webui_attachment_extensions": "md,txt,pdf,docx,xlsx,pptx",
              "open_webui_batch_add": true
            }
          }
          EOF

      - name: Test connections
        run: |
          confluence-markdown-exporter test-connection

      - name: Export spaces
        run: |
          # Export multiple spaces
          spaces=("DOCS" "ENGINEERING" "PRODUCT")

          for space in "${spaces[@]}"; do
            echo "Exporting space: $space"
            confluence-markdown-exporter space "$space" "./exports/$space/"

            if [ $? -eq 0 ]; then
              echo "✓ Successfully exported $space"
            else
              echo "✗ Failed to export $space"
              exit 1
            fi
          done

      - name: Upload export logs
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: export-logs
          path: |
            ./exports/
            ~/.local/share/confluence-markdown-exporter/logs/
          retention-days: 30

      - name: Notify on failure
        if: failure()
        run: |
          # Send notification (customize as needed)
          echo "Export failed - check logs for details"
          # curl -X POST -H 'Content-type: application/json' \
          #   --data '{"text":"Confluence export failed"}' \
          #   ${{ secrets.SLACK_WEBHOOK_URL }}

  cleanup:
    runs-on: ubuntu-latest
    needs: export
    if: always()

    steps:
      - name: Cleanup old exports
        run: |
          # Cleanup logic for old exports
          echo "Cleaning up old exports..."
          # Add your cleanup logic here